name: Fetch & Deploy SmartNews Feed

on:
  schedule:
    - cron: "*/30 * * * *"      # every 30 minutes
  workflow_dispatch:             # allow manual run
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install XML tools (xmllint)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends libxml2-utils

      # ---- FETCH WITH FULL DEBUG ----
      - name: Fetch CableTV feed with full diagnostics
        env:
          FEED_URL: https://rss.app/feeds/IPTSK5jPaETkAX2v.xml
        run: |
          set -euxo pipefail
          echo "Fetching: $FEED_URL"
          # Fetch headers + body separately so we can inspect
          curl -sS -D headers.txt -o smartnews-source.xml \
            -A "Mozilla/5.0 (GitHubActions; +https://github.com/actions)" \
            -H "Accept: application/rss+xml, application/xml;q=0.9, text/xml;q=0.8, */*;q=0.1" \
            -L --max-redirs 5 --retry 3 --retry-delay 5 "$FEED_URL"
          echo "---- Response headers ----"
          cat headers.txt || true
          echo "---- File size (bytes) ----"
          wc -c smartnews-source.xml || true
          echo "---- First 200 bytes ----"
          head -c 200 smartnews-source.xml | sed 's/</\&lt;/g' || true

          # Basic sanity: non-empty file
          test -s smartnews-source.xml

          # Content-Type sanity (warn if not XML-like)
          if ! grep -iE '^content-type:.*(xml|rss)' headers.txt > /dev/null; then
            echo "::warning ::Content-Type is not XML/RSS. Proceeding to structural checks anyway."
          fi

      # ---- VALIDATE IT'S REAL XML (NOT HTML/CHALLENGE PAGE) ----
      - name: Validate XML (fail if HTML or not well-formed)
        run: |
          set -euxo pipefail
          # Fast guard: if it looks like HTML, bail with a clear error
          if head -c 400 smartnews-source.xml | grep -qiE '<!doctype html|<html'; then
            echo "::error ::Downloaded content looks like HTML, not RSS XML. Check FEED_URL or upstream protection."
            exit 2
          fi
          # Well-formedness check
          xmllint --noout smartnews-source.xml

      # ---- PAGES ENABLEMENT & DEPLOY ----
      - name: Configure Pages (enable if needed)
        uses: actions/configure-pages@v5
        with:
          enablement: true

      # Add a minimal index and .nojekyll at deploy time if they don't exist
      - name: Ensure index.html and .nojekyll exist
        run: |
          if [ ! -f index.html ]; then
            cat > index.html <<'HTML'
          <!doctype html>
          <html><head><meta charset="utf-8"><title>CableTV SmartNews Feed</title></head>
          <body><h1>CableTV SmartNews Feed</h1>
          <p><a href="smartnews-source.xml">Open smartnews-source.xml</a></p></body></html>
          HTML
          fi
          touch .nojekyll
          ls -la

      - name: Upload artifact (repo root)
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to Pages
        uses: actions/deploy-pages@v4
